
<div class="room" style="border: @SetBorder()">
<div class="room-div" >
	<div class="room-image" style=" background-image: url(@ImgUrl)">

	</div>
	<div class="room-info" >
		<h1>Комната №@RoomNumber</h1>
		<h2>Максимальная вместимость:<br/>@MaxCapacity @CorrectWord()</h2>
		<div class="room-button">
			<button @onclick=@RoomChoice>Выбрать</button>
		</div>
		
	</div>
</div>
</div>

@code {
	[Inject]
	CurrentBooking currentBooking { get; set; }



	[Parameter]
	public int ChosenRoomID { get; set; } 

	[Parameter]
	public EventCallback<int> ChosenRoomIDChanged { get; set; }

	protected override async Task OnInitializedAsync()
	{

		ChosenRoomID = currentBooking.RoomNumber;
		await ChosenRoomIDChanged.InvokeAsync(ChosenRoomID);
		Console.WriteLine(currentBooking.RoomNumber);
	}

	public async Task RoomChoice()
	{
		ChosenRoomID = RoomNumber;
		currentBooking.SetRoomNumber(RoomNumber);
		await ChosenRoomIDChanged.InvokeAsync(ChosenRoomID);

	}


	[Parameter]
	public int RoomNumber { get; set; } 

	[Parameter]
	public int MaxCapacity { get; set; }

	[Parameter]
	public string ImgUrl { get; set; }

	bool Pressed = false;

	string CorrectWord()
	{
		List<int> check = [2, 3, 4 ];
		if (check.Contains(MaxCapacity))
		{
			return "человека";
		}
		return "человек";
	}

	string SetBorder()
	{
		return ChosenRoomID == RoomNumber ? "5px solid white" : "5px solid transparent";
		
	}
}
