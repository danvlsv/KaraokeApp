@using BlazorApp.Backend
@inject Backend.DbManager DbManager
@{
	// @foreach (var booking in bookings)
	// {
	// 	Console.WriteLine(booking.Id + " " + booking.RoomNumber + " " + booking.Date + " " + booking.Time + " " + booking.Name + " " + booking.Phone + " " + booking.Extra + " " + booking.Status);
	// }
	int hour = 0;
	int start = 0;
	for (int i = 0; i <= 4; i++)
	{
		<div class="hours-row">
		@if (i==4){
			start=1;
		}
			@for (int j = start; j <= 4; j++)
			{
				int hourNum = hour;
				// TimeOnly time = new TimeOnly(hour, 0);
				Console.WriteLine(hourNum);

				if (Time.Contains(hourNum) == false)
				{

					Console.WriteLine("Доступное время");

					<div class="available-time"
						 style="background-color:@(hourNum==ChosenTime ? "#4CC160" : "white" )"
						 @onclick="()=>ChosenTime=hourNum">
						<p>@hourNum:00</p>
					</div>

				}
				else
				{
					<div class="unavailable-time">
						<p>@hourNum:00</p>
					</div>

				}

				hour++;
			}
		</div>
	}
}

<div class="time-choice">
	@if (ChosenTime != null)
	{

		<p>Выбран промежуток времени с @ChosenTime:00-@(ChosenTime + 1):00</p>


	}

</div>

@code {
	int? ChosenTime { get; set; } = null;

	List<TimeOnly> availableTimes = new List<TimeOnly>
	{
		new TimeOnly(10,0),
		new TimeOnly(12,0),
		new TimeOnly(18,0),
	};



	string SetBorder(int time)
	{
		return ChosenTime == time ? "5px solid #BD3838" : "5px solid transparent";

	}









	//Миша добавилл код ниже

	private List<Booking> bookings = null;
	private List<int> Time = null;



	protected override async Task OnInitializedAsync()
	{
		AddBooking();
		GetAvailableTimes();
		// DeleteBooking();
	}

	private void GetAvailableTimes()
	{
		Time = DbManager.GetAllBookedTimeOfDay("30.10.2024");
	}

	private void AddBooking()
	{
		// Реализуйте метод для добавления бронирования, например, открыть модальное окно
		DbManager.AddNewBooking(1, "30.10.2024", 10, "John Doe", "1234567890", "Дополнительные требования");
		DbManager.AddNewBooking(2, "30.10.2024", 12, "Михаил Фёдоровых", "1234123422", "Нет");
		DbManager.AddNewBooking(3, "30.10.2024", 11, "Данил Власов", "1111111111", "Нет");
		DbManager.AddNewBooking(1, "30.10.2024", 7, "Анна Арланова", "1222222222", "Нет");
		bookings = DbManager.GetAllBooking(); // Обновите список бронирований
	}

	private void DeleteBooking()
	{
		DbManager.DeleteAllBooking();
		bookings = DbManager.GetAllBooking(); // Обновите список бронирований
	}
}
