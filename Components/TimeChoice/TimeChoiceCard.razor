@using BlazorApp.Backend
@inject Backend.DbManager DbManager
@{
	// @foreach (var booking in bookings)
	// {
	// 	Console.WriteLine(booking.Id + " " + booking.RoomNumber + " " + booking.Date + " " + booking.Time + " " + booking.Name + " " + booking.Phone + " " + booking.Extra + " " + booking.Status);
	// }
	int hour = 0;

	for (int i = 0; i <= 3; i++)
	{
		<div class="hours-row">
		
			@for (int j = 0; j <= 5; j++)
			{
				int hourNum = hour;
				// TimeOnly time = new TimeOnly(hour, 0);
				// Console.WriteLine(hourNum);

				if (Time.Contains(hourNum) == false)
				{

					// Console.WriteLine("Доступное время");

					<div class="available-time"
						 style="background-color:@(hourNum==ChosenTime ? "#4CC160" : "white" )"
						 @onclick="()=>ChooseTime(hourNum)">
						<p>@hourNum:00</p>
					</div>

				}
				else
				{
					<div class="unavailable-time">
						<p>@hourNum:00</p>
					</div>

				}

				hour++;
			}
		</div>
	}
}

<div class="switcher">

	<div class="quarter button-div">
		@LeftButton
	</div>
	@if (ChosenTime != null)
	{
		@* <div class="half"> *@
		<p>Выбран промежуток времени с @ChosenTime:00-@(ChosenTime + 1):00</p>
		@* </div> *@
		<div class="quarter button-div">
			@RightButton
		</div>

	}

</div>

@code {

	[Inject]
	CurrentBooking currentBooking { get; set; }

	protected override async Task OnInitializedAsync()
	{
		ChosenDate = currentBooking.Date;
		ChosenRoom = currentBooking.RoomNumber;
		if (currentBooking.Time != null)
		{
			ChooseTime(currentBooking.Time);

		}

		// AddBooking();
		await GetAvailableTimes();
		// DeleteBooking();
	}


	string ChosenDate { get; set; }
	int ChosenRoom { get; set; }


	int? ChosenTime { get; set; } = null;


	string SetBorder(int time)
	{
		return ChosenTime == time ? "5px solid #BD3838" : "5px solid transparent";

	}


	[Parameter]
	public RenderFragment? LeftButton { get; set; }
	[Parameter]
	public RenderFragment? RightButton { get; set; }


	//Миша добавилл код ниже

	private List<Booking> bookings = null;
	private List<int> Time = null;


	private void ChooseTime(int? hour)
	{
		ChosenTime = hour;
		currentBooking.SetTime(hour);
	}


	private async Task GetAvailableTimes()
	{
		Time = DbManager.GetAllBookedTimeOfDay(ChosenDate,ChosenRoom);
	}

	// private void AddBooking()
	// {
	// 	// Реализуйте метод для добавления бронирования, например, открыть модальное окно
	// 	DbManager.AddNewBooking(1, "30.10.2024", 10, "John Doe", "1234567890", "Дополнительные требования");
	// 	DbManager.AddNewBooking(2, "30.10.2024", 12, "Михаил Фёдоровых", "1234123422", "Нет");
	// 	DbManager.AddNewBooking(3, "30.10.2024", 11, "Данил Власов", "1111111111", "Нет");
	// 	DbManager.AddNewBooking(1, "30.10.2024", 7, "Анна Арланова", "1222222222", "Нет");
	// 	bookings = DbManager.GetAllBooking(); // Обновите список бронирований
	// }

	// private void DeleteBooking()
	// {
	// 	DbManager.DeleteAllBooking();
	// 	bookings = DbManager.GetAllBooking(); // Обновите список бронирований
	// }
}
